-- 1. Create database ANALYTICS
CREATE DATABASE ANALYTICS;
USE ANALYTICS;

-- 2. Create STUDENT_INFO table
CREATE TABLE STUDENT_INFO (
    STUDENT_ID VARCHAR(10) NOT NULL PRIMARY KEY,
    NAME VARCHAR(20) NOT NULL,
    ADDRESS VARCHAR(90) NOT NULL,
    PHONE_NO CHAR(10) NOT NULL CHECK (PHONE_NO REGEXP '^[0-9]{10}$'),
    EMAIL_ID VARCHAR(30) NOT NULL CHECK (EMAIL_ID LIKE '%@%'),
    QUALIFICATION1 VARCHAR(50),
    QUALIFICATION2 VARCHAR(50),
    EXPERIENCE DECIMAL(3,1),
    COMPANY_NAME VARCHAR(50),
    COURSE_OPTED1 VARCHAR(50) NOT NULL CHECK (COURSE_OPTED1 IN ('REPORTING ANALYSIS POWER PACK', 'BUSINESS ANALYTICS POWER PACK', 'DATA ANALYTICS POWER PACK', 'DATA SCIENCE MODELLING & MACHINE LEARNING')),
    COURSE_OPTED2 VARCHAR(50) CHECK (COURSE_OPTED2 IN ('REPORTING ANALYSIS POWER PACK', 'BUSINESS ANALYTICS POWER PACK', 'DATA ANALYTICS POWER PACK', 'DATA SCIENCE MODELLING & MACHINE LEARNING')),
    COURSE_OPTED3 VARCHAR(50) CHECK (COURSE_OPTED3 IN ('REPORTING ANALYSIS POWER PACK', 'BUSINESS ANALYTICS POWER PACK', 'DATA ANALYTICS POWER PACK', 'DATA SCIENCE MODELLING & MACHINE LEARNING')),
    ADMISSION_DATE DATE NOT NULL,
    EXPECTED_END_DATE DATE AS (
        CASE 
            WHEN COURSE_OPTED1 = 'REPORTING ANALYSIS POWER PACK' THEN DATE_ADD(ADMISSION_DATE, INTERVAL 3 MONTH)
            WHEN COURSE_OPTED1 = 'BUSINESS ANALYTICS POWER PACK' THEN DATE_ADD(ADMISSION_DATE, INTERVAL 6 MONTH)
            WHEN COURSE_OPTED1 = 'DATA ANALYTICS POWER PACK' THEN DATE_ADD(ADMISSION_DATE, INTERVAL 7 MONTH)
            WHEN COURSE_OPTED1 = 'DATA SCIENCE MODELLING & MACHINE LEARNING' THEN DATE_ADD(ADMISSION_DATE, INTERVAL 8 MONTH)
        END
    )
);

-- 3. Create R_marks_info table
CREATE TABLE R_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    Test_1 DECIMAL(3,1),
    Test_2 DECIMAL(3,1),
    Test_3 DECIMAL(3,1),
    Retest1 DECIMAL(3,1),
    Retest2 DECIMAL(3,1),
    Retest3 DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 4. Create SAS_marks_info table
CREATE TABLE SAS_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    MT1 DECIMAL(3,1),
    MT2 DECIMAL(3,1),
    Data_step_test DECIMAL(3,1),
    MT3 DECIMAL(3,1),
    Proc_Test DECIMAL(3,1),
    Base_SAS_Test DECIMAL(3,1),
    Retest1 DECIMAL(3,1),
    Retest2 DECIMAL(3,1),
    Retest3 DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 5. Create SQL_marks_info table
CREATE TABLE SQL_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    SQL_test1 DECIMAL(3,1),
    SQL_test2 DECIMAL(3,1),
    Retest1 DECIMAL(3,1),
    Retest2 DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 6. Create EXCEL_marks_info table
CREATE TABLE EXCEL_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    Basic_excel_test DECIMAL(3,1),
    MT1 DECIMAL(3,1),
    Excel_test1 DECIMAL(3,1),
    Retest DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 7. Create VBA_marks_info table
CREATE TABLE VBA_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    Function_excel_Test DECIMAL(3,1),
    Function_vba_test DECIMAL(3,1),
    Final_test DECIMAL(3,1),
    Retest1 DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 8. Create TABLEAU_marks_info table
CREATE TABLE TABLEAU_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    MT1 DECIMAL(3,1),
    Test1 DECIMAL(3,1),
    Retest1 DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 9. Create PYTHON_marks_info table
CREATE TABLE PYTHON_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    Test1 DECIMAL(3,1),
    Test2 DECIMAL(3,1),
    Retest1 DECIMAL(3,1),
    Retest2 DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 10. Create ML_marks_info table
CREATE TABLE ML_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    Test1 DECIMAL(3,1),
    Test2 DECIMAL(3,1),
    Retest DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 11. Create ASAS_marks_info table
CREATE TABLE ASAS_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    MT1 DECIMAL(3,1),
    MT2 DECIMAL(3,1),
    Final_test DECIMAL(3,1),
    Retest DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 12. Create FULL_LENGTH_marks_info table
CREATE TABLE FULL_LENGTH_marks_info (
    STUDENT_ID VARCHAR(10) NOT NULL,
    Class_start_Date DATE,
    Class_End_Date DATE,
    Faculty VARCHAR(50) NOT NULL,
    R_test DECIMAL(3,1),
    SAS_test DECIMAL(3,1),
    SQL_test DECIMAL(3,1),
    Excel_test DECIMAL(3,1),
    VBA_test DECIMAL(3,1),
    Python_test DECIMAL(3,1),
    Tableau_test DECIMAL(3,1),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

-- 13. Create Placement_Activity table
CREATE TABLE Placement_Activity (
    Student_ID VARCHAR(10) NOT NULL,
    Mock_interview1 VARCHAR(50),
    Mock_interview2 VARCHAR(50),
    Mock_interview3 VARCHAR(50),
    Resume_Finalised VARCHAR(50),
    Profile_Building VARCHAR(50),
    Certificate_Issued ENUM('YES', 'NO'),
    Actual_course_enddate DATE,
    FOREIGN KEY (Student_ID) REFERENCES STUDENT_INFO(STUDENT_ID)
);

